[{"id":"content:0.index.md","path":"/","dir":"","title":"Home","description":"","keywords":[],"body":"     Nuxt 3 notification library üó®Ô∏è   A nuxt module for simplifying the use of   vue3-notification "},{"id":"content:1.docs:1.introduction:1.getting-started.md","path":"/docs/introduction/getting-started","dir":"introduction","title":"Getting started","description":"","keywords":["Installation","Usage"],"body":"  Getting started  Installation   Install   nuxt3-notifications  locally:      npm   install   --save-dev   nuxt3-notifications\n     yarn   add   -D   nuxt3-notifications\n     pnpm   add   -D   nuxt3-notifications\n   Add module to your   nuxt.config  file:   The module settings can be seen on the page   configuration      export   default   defineNuxtConfig  ({\n     modules: [  'nuxt3-notifications'  ],\n     nuxtNotifications: {}\n   })\n     export   default   defineNuxtConfig  ({\n     modules: [  'nuxt3-notifications'  ],\n     nuxtNotifications: {\n       componentName:   'AppNotifications'\n     }\n   })\n  Usage   Note: Below are the minimum instructions. See full instructions for using the plugin   here .  Register root component      <!-- your script code -->\n   \n   <  template  >\n     <!-- your code -->\n   \n     <  NuxtNotifications   position  =  \"bottom left\"   :  speed  =  \"  500  \"   />\n   </  template  >\n     <!-- your script code -->\n   \n   <  template  >\n     <!-- your code -->\n   \n     <  AppNotifications   position  =  \"bottom left\"   :  speed  =  \"  500  \"   />\n   </  template  >\n  User from any application component      <  script   setup  >\n     const   {   notify   }   =   useNotification  ();\n   \n     function   onClick  () {\n       notify  ({\n         title:   \"Title\"  ,\n         text:   \"Hello notify!\"  ,\n       });\n     }\n   </  script  >\n   \n   <  template  >\n     <  button   @  click  =  \"  onClick  \"  >Show notify</  button  >\n   </  template  >\n  html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}"},{"id":"content:1.docs:1.introduction:2.configuration.md","path":"/docs/introduction/configuration","dir":"introduction","title":"Module configuration","description":"Learn how to configure module.","keywords":["Learn how customize vue plugin"],"body":"  Module configuration  Learn how to configure module.     export   default   defineAppConfig  ({\n     nuxtNotifications: {\n       componentName:   'NuxtNotifications'\n     }\n   })\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      Key   Type   Default   Description     componentName   string  NuxtNotifications  The name of the component that needs to be declared  Learn how customize vue plugin  If you need to configure a plugin for vue, please refer to the documentation   vue3-notification  html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}"},{"id":"content:2.demo:0.index.md","path":"/demo","dir":"","title":"Demo","description":"","keywords":[],"body":"  Demo        <  script   lang  =  \"ts\"   setup  >\n   const   {   notify   }   =   useNotification  ();\n   \n   const   id   =   useState  (  'id'  , ()   =>   0  );\n   \n   function   show  (  group  :   string  ,   type   =   ''  ) {\n     const   text   =   `\n     This is notification text!\n     <br>\n     Date: ${  new   Date  ()  }\n   `  ;\n   \n     notify  ({\n       group,\n       title:   `Test ${  type  } notification #${  id  .  value  ++  }`  ,\n       text,\n       type,\n       data: {\n         randomNumber: Math.  random  ()\n       }\n     });\n   }\n   \n   function   clean  (  group  :   string  ) {\n     notify  ({ group, clean:   true   });\n   }\n   </  script  >\n   \n   <  template  >\n     <  div   id  =  \"demo\"  >\n       <!-- CSS animation example -->\n       <  NuxtNotifications\n         group  =  \"foo-css\"\n         position  =  \"bottom left\"\n         dangerously-set-inner-html\n         :  speed  =  \"  500  \"\n       />\n   \n       <!-- Custom style example -->\n       <  NuxtNotifications\n         group  =  \"custom-style\"\n         position  =  \"top center\"\n         classes  =  \"n-light\"\n         :  max  =  \"  3  \"\n         :  width  =  \"  400  \"\n         :  duration  =  \"  -  1  \"\n         dangerously-set-inner-html\n       />\n   \n       <!-- Custom template example -->\n       <  NuxtNotifications\n         group  =  \"custom-template\"\n         :  duration  =  \"  5000  \"\n         :  width  =  \"  650  \"\n         animation-name  =  \"v-fade-left\"\n         position  =  \"top left\"\n         dangerously-set-inner-html\n       >\n         <  template   #  body  =  \"  { item, close }  \"  >\n           <  div   class  =  \"custom-template\"  >\n             <  div   class  =  \"custom-template-icon\"  >\n               <  svg   width  =  \"32\"   height  =  \"32\"   viewBox  =  \"0 0 32 32\"   version  =  \"1.1\"   xmlns  =  \"http://www.w3.org/2000/svg\"  >\n                 <  g   id  =  \"Page-1\"   stroke  =  \"none\"   stroke-width  =  \"1\"   fill  =  \"none\"   fill-rule  =  \"evenodd\"  >\n                   <  g   id  =  \"Icon-Set\"   transform  =  \"translate(-100.000000, -1139.000000)\"   fill  =  \"currentColor\"  >\n                     <  path   d  =  \"\n                         M122.027,1148.07 C121.548,1147.79 120.937,1147.96 120.661,1148.43 \n                         L114.266,1159.51 L110.688,1156.21 C110.31,1155.81 109.677,1155.79 109.274,1156.17 \n                         C108.871,1156.54 108.85,1157.18 109.228,1157.58 L113.8,1161.8 C114.177,1162.2 \n                         114.81,1162.22 115.213,1161.84 C115.335,1161.73 122.393,1149.43 122.393,1149.43 C122.669,1148.96 \n                         122.505,1148.34 122.027,1148.07 L122.027,1148.07 Z M116,1169 \n                         C108.268,1169 102,1162.73 102,1155 C102,1147.27 \n                         108.268,1141 116,1141 C123.732,1141 130,1147.27 130,1155 C130,1162.73 123.732,1169 \n                         116,1169 L116,1169 Z M116,1139 C107.164,1139 100,1146.16 100,1155 \n                         C100,1163.84 107.164,1171 116,1171 C124.836,1171 132,1163.84 132,1155 \n                         C132,1146.16 124.836,1139 116,1139 L116,1139 Z\n                       \"   \n                     />\n                   </  g  >\n                 </  g  >\n               </  svg  >\n             </  div  >\n             <  div   class  =  \"custom-template-content\"  >\n               <  div   class  =  \"custom-template-title\"  >\n                 {{ item.title }}\n   \n                 <  p  >\n                   Random number: {{ item.data.randomNumber }}\n                 </  p  >\n               </  div  >\n               <  div\n                 class  =  \"custom-template-text\"\n                 v-html  =  \"  item.text  \"\n               /  >\n             </  div  >\n             <  div\n               class  =  \"custom-template-close\"\n               @  click  =  \"  close  \"\n             >\n               <  svg   width  =  \"16\"   height  =  \"16\"   viewBox  =  \"0 0 24 24\"   fill  =  \"none\"   xmlns  =  \"http://www.w3.org/2000/svg\"  >\n                 <  path   d  =  \"M7 17L16.8995 7.10051\"   stroke  =  \"currentColor\"   stroke-linecap  =  \"round\"   stroke-linejoin  =  \"round\"   />\n                 <  path   d  =  \"M7 7.00001L16.8995 16.8995\"   stroke  =  \"currentColor\"   stroke-linecap  =  \"round\"   stroke-linejoin  =  \"round\"   />\n               </  svg  >\n             </  div  >\n           </  div  >\n         </  template  >\n       </  NuxtNotifications  >\n   \n       <!-- Full width example -->\n       <  NuxtNotifications\n         group  =  \"full-width\"\n         width  =  \"100%\"\n         position  =  \"bottom left\"\n         dangerously-set-inner-html\n       />\n   \n       <  div   class  =  \"content\"  >\n         <  p  >CSS animation:</  p  >\n         <  div   class  =  \"block\"  >\n           <  button   class  =  \"success\"   @  click  =  \"  show  (  'foo-css'  ,   'success'  )  \"  >\n             <  i   class  =  \"icon ion-information-circled\"   /  >\n             SUCCESS\n           </  button  >\n           <  button   class  =  \"warn\"   @  click  =  \"  show  (  'foo-css'  ,   'warn'  )  \"  >\n             <  i   class  =  \"icon ion-alert-circled\"   /  >\n             WARNING\n           </  button  >\n           <  button   class  =  \"error\"   @  click  =  \"  show  (  'foo-css'  ,   'error'  )  \"  >\n             <  i   class  =  \"icon ion-close-circled\"   /  >\n             ERROR\n           </  button  >\n           <  button   class  =  \"info\"   @  click  =  \"  show  (  'foo-css'  ,   'info'  )  \"  >\n             <  i   class  =  \"icon ion-close-circled\"   /  >\n             INFO\n           </  button  >\n         </  div  >\n         <  div  >\n           <  p  ></  p  >\n           <  p  >Custom style:</  p  >\n           <  button   @  click  =  \"  show  (  'custom-style'  )  \"  >top center (max=3, duration=infinity)</  button  >\n           <  p  ></  p  >\n           <  p  >Custom template:</  p  >\n           <  button   @  click  =  \"  show  (  'custom-template'  )  \"  >show top left</  button  >\n           <  p   /  >\n           <  button   @  click  =  \"  clean  (  'custom-template'  )  \"  ><  u  >clean all</  u  > top left</  button  >\n           <  p   /  >\n           <  button   @  click  =  \"  show  (  'full-width'  )  \"  >show bottom (full width)</  button  >\n         </  div  >\n       </  div  >\n     </  div  >\n   </  template  >\n   \n   <  style   lang  =  \"scss\"   scoped  >\n     #demo   {\n       button   {\n         display  :   inline-block  ;\n         box-sizing  :   border-box  ;\n         border  :   0  ;\n         border-radius  :   3  px  ;\n         color  :   white  ;\n         vertical-align  :   top  ;\n         text-decoration  :   none  ;\n         font-size  :   12  px  ;\n         font-family  :   inherit  ;\n         cursor  :   pointer  ;\n         outline  :   none  ;\n         transition  :   all   500  ms  ;\n         padding  :   12  px  ;\n         box-shadow  :   none  ;\n         background  :   #02ccba  ;\n         font-weight  :   600  ;\n         width  :   100  %  ;\n         letter-spacing  :   1  px  ;\n         box-shadow  :   0   5  px   15  px   0  px   rgba  (  46  ,   61  ,   73  ,   0.1  );\n   \n         &  .success   {\n           background  :   #68cd86  ;\n         }\n   \n         &  .warn   {\n           background  :   #ffb648  ;\n         }\n   \n         &  .error   {\n           background  :   #e54d42  ;\n         }\n   \n         &  .info   {\n           background  :   #02ccba  ;\n         }\n   \n         &  :active   {\n           opacity  :   0.8  ;\n         }\n       }\n   \n       .sub-button   {\n         display  :   inline-block  ;\n         float  :   right  ;\n         background  :   #e54d42  ;\n         padding  :   4  px  ;\n         box-shadow  :   0   5  px   15  px   0  px   rgba  (  46  ,   61  ,   73  ,   0.1  );\n       }\n   \n       /*\n         EXAMPLES\n       */\n       :  deep  (  .vue-notification-template.n-light  ) {\n         margin  :   10  px  ;\n         margin-bottom  :   0  ;\n         border-radius  :   3  px  ;\n         font-size  :   13  px  ;\n         padding  :   10  px   20  px  ;\n         color  :   #495061  ;\n         background  :   #eaf4fe  ;\n         border  :   1  px   solid   #d4e8fd  ;\n   \n         .notification-title   {\n           letter-spacing  :   1  px  ;\n           text-transform  :   uppercase  ;\n           font-size  :   10  px  ;\n           color  :   #2589f3  ;\n         }\n       }\n   \n       .custom-template   {\n         display  :   flex  ;\n         flex-direction  :   row  ;\n         flex-wrap  :   nowrap  ;\n         text-align  :   left  ;\n         font-size  :   13  px  ;\n         margin  :   5  px  ;\n         margin-bottom  :   0  ;\n         align-items  :   center  ;\n         justify-content  :   center  ;\n   \n         &  ,\n         &   >   div   {\n           box-sizing  :   border-box  ;\n         }\n   \n         background  :   #e8f9f0  ;\n         border  :   2  px   solid   #d0f2e1  ;\n   \n         .custom-template-icon   {\n           flex  :   0   1   auto  ;\n           color  :   #15c371  ;\n           font-size  :   32  px  ;\n           padding  :   0   10  px  ;\n           display  :   flex  ;\n           align-items  :   center  ;\n           justify-content  :   center  ;\n         }\n   \n         .custom-template-close   {\n           flex  :   0   1   auto  ;\n           padding  :   0   20  px  ;\n           font-size  :   16  px  ;\n           opacity  :   0.2  ;\n           cursor  :   pointer  ;\n           display  :   flex  ;\n           align-items  :   center  ;\n           justify-content  :   center  ;\n           color  :   black  ;\n   \n           &  :hover   {\n             opacity  :   0.8  ;\n           }\n         }\n   \n         .custom-template-content   {\n           padding  :   10  px  ;\n           flex  :   1   0   auto  ;\n           color  :   black  ;\n   \n           .custom-template-title   {\n             letter-spacing  :   1  px  ;\n             text-transform  :   uppercase  ;\n             font-size  :   10  px  ;\n             font-weight  :   600  ;\n           }\n         }\n       }\n   \n       .block   {\n         display  :   flex  ;\n   \n         >   *  :not  (  :last-child  ) {\n           margin-right  :   30  px  ;\n         }\n       }\n   \n       p   {\n         margin-bottom  :   1  rem  ;\n       }\n   \n       :deep(  .v-fade-left-enter-active  ),\n       :deep(  .v-fade-left-leave-active  ),\n       :deep(  .v-fade-left-move  ) {\n         transition  :   all   .5  s  ;\n       }\n   \n       :deep(  .v-fade-left-enter  ),\n       :deep(  .v-fade-left-leave-to  ) {\n         opacity  :   0  ;\n         transform  :   translateX  (  -500  px  )   scale  (  0.2  );\n       }\n     }\n   </  style  >\n  html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}"}]